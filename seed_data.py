from datetime import datetime
from app import create_app, db
from models import Movie, Showtime, Seat  # Импортируем модели

def add_test_data():
    # Добавление тестовых фильмов
    # movie1 = Movie(
    #     title="The Matrix",
    #     description="A hacker discovers the truth about his world.",
    #     genre="Sci-Fi"
    # )
    # movie2 = Movie(
    #     title="Inception",
    #     description="A thief who steals corporate secrets through dream-sharing technology.",
    #     genre="Action"
    # )
    
    # # Добавление сеансов для фильмов
    # showtime1 = Showtime(
    #     movie=movie1,
    #     showtime_date=datetime(2024, 11, 1, 18, 30)
    # )
    # showtime2 = Showtime(
    #     movie=movie1,
    #     showtime_date=datetime(2024, 11, 2, 20, 0)
    # )
    # showtime3 = Showtime(
    #     movie=movie2,
    #     showtime_date=datetime(2024, 11, 3, 19, 30)
    # )
    
    # Добавление мест для каждого сеанса
    # seat1 = Seat(seat_number="A1", is_reserved=False, showtime=showtime1)
    # seat2 = Seat(seat_number="A2", is_reserved=True, showtime=showtime1)
    # seat3 = Seat(seat_number="B1", is_reserved=False, showtime=showtime2)
    # seat4 = Seat(seat_number="B2", is_reserved=True, showtime=showtime2)
    # seat5 = Seat(seat_number="C1", is_reserved=False, showtime=showtime3)
    # seat6 = Seat(seat_number="C2", is_reserved=True, showtime=showtime3)

    # Сохранение всех данных в БД
    list_test_films = [
        ["Матрица", "Хакер узнает правду о своей реальности и присоединяется к восстанию против машин.", "Научная фантастика"],
        ["Начало", "Вор, способный проникать в сны, берется за последнее задание — внедрить идею в чей-то разум.", "Боевик"],
        ["Интерстеллар", "Группа исследователей отправляется через червоточину в космосе, чтобы спасти человечество.", "Научная фантастика"],
        ["Крестный отец", "Стареющий глава мафиозной династии передает контроль над своим бизнесом своему неохотному сыну.", "Криминал"],
        ["Криминальное чтиво", "Жизни двух наемных убийц, боксера и других героев переплетаются в ряде неожиданных событий.", "Криминал"],
        ["Побег из Шоушенка", "Двое заключенных сближаются за долгие годы, находя утешение и искупление в добрых поступках.", "Драма"],
        ["Бойцовский клуб", "Разочарованный офисный работник создает подпольный бойцовский клуб, который превращается во многое другое.", "Драма"],
        ["Темный рыцарь", "Бэтмен должен противостоять загадочному преступнику Джокеру, угрожающему Готэму.", "Боевик"],
        ["Форрест Гамп", "История простого человека, который оказывается свидетелем ключевых событий в истории Америки.", "Драма"],
        ["Список Шиндлера", "История оскароносного бизнесмена, который спасает евреев в годы Холокоста.", "Исторический"],
        ["Зеленая миля", "Заключенный с необычными способностями изменяет жизнь тюремных охранников на 'Зеленой миле'.", "Драма"],
        ["Властелин колец: Братство кольца", "Молодой хоббит отправляется в опасное путешествие, чтобы уничтожить могущественное кольцо.", "Фэнтези"],
        ["Титаник", "История любви на борту обреченного лайнера 'Титаник'.", "Драма"],
        ["Звёздные войны: Империя наносит ответный удар", "Повстанцы сражаются против Империи, а Люк узнает секреты своего прошлого.", "Фантастика"],
        ["Гладиатор", "Римский генерал, ставший рабом, стремится отомстить императору, убившему его семью.", "Исторический"],
        ["Семь", "Два детектива расследуют серию убийств, вдохновленных семью смертными грехами.", "Триллер"],
        ["Чужой", "Экипаж космического корабля сталкивается с агрессивной формой жизни на борту.", "Ужасы"],
        ["Один дома", "Мальчик остается один дома на Рождество и противостоит грабителям.", "Комедия"],
        ["Рататуй", "Крыса с талантом к кулинарии помогает молодому повару преуспеть в ресторане.", "Анимация"],
        ["Гарри Поттер и философский камень", "Мальчик-волшебник начинает учебу в школе магии Хогвартс.", "Фэнтези"]
    ]
    movies = []
    for film in list_test_films:
        movies.append(Movie(
            title=film[0],
            description=film[1],
            genre=film[2]
        ))

    
    db.session.add_all(movies)
    db.session.commit()
    print("Test data added successfully!")

if __name__ == "__main__":
    app = create_app()
    with app.app_context():  # Инициализация контекста приложения
        add_test_data()
